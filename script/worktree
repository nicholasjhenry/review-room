#!/bin/sh

# script/worktree: Setup for working in a git worktree
#

cd "$(dirname "$0")/.."

symlink_if_exists() {
    filename="$1"
    if [ -e "$filename" ]; then
        echo "==> Skipping $filename already linked."
    elif [ -e "../../$filename" ]; then
        echo "==> Symlinking $filename from main repo root…"
        ln -s "../../$filename" "$filename"
    else
        echo "==> No $filename found in main repo root, skipping."
    fi
}

create_env_local() {
    compose_project_name="${COMPOSE_PROJECT_NAME:-}"
    workspace_name="${CONDUCTOR_WORKSPACE_NAME:-}"
    conductor_port="${CONDUCTOR_PORT:-}"

    if [ -z "$compose_project_name" ]; then
        echo "==> COMPOSE_PROJECT_NAME not set, skipping .env.local."
        return
    fi

    if [ -z "$workspace_name" ]; then
        echo "==> CONDUCTOR_WORKSPACE_NAME not set, skipping .env.local."
        return
    fi

    if [ -z "$conductor_port" ]; then
        echo "==> CONDUCTOR_PORT not set, skipping .env.local."
        return
    fi

    case "$conductor_port" in
    *[!0-9]*)
        echo "==> CONDUCTOR_PORT must be numeric, skipping .env.local."
        return
        ;;
    esac

    port=$((conductor_port + 1))

    cat >.env.local <<EOF
COMPOSE_PROJECT_NAME=${compose_project_name}-${workspace_name}
NODE_NAME=${workspace_name}
DATABASE_PORT=${conductor_port}
PORT=${port}
EOF

    echo "==> Wrote .env.local."
}

symlink_if_exists .claude
symlink_if_exists .env

# Load existing .env first to generate .env.local
mise trust --quiet
eval $(mise env --quiet)
create_env_local
# Trust new .env.local
mise trust --quiet

echo "==> Copying deps…"
cp -r ../../deps ./deps
echo "==> Copying build…"
cp -r ../../_build ./_build || true
